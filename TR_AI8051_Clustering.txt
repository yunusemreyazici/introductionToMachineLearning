

AI8051 Clustering


Url:https://globalaihub.com/courses/introduction-to-machine-learning/lessons/ai8050-clustering/topic/ai8051-clustering/



Merhaba ve tekrar hoş geldiniz! Bu videoda makine öğreniminin bir başka ilginç alanından bahsedeceğiz: denetimsiz öğrenme. Ayrıca ana denetimsiz öğrenme algoritmalarından birini ayrıntılı olarak tartışacağız: kümeleme. Size bir soru sorarak başlayayım. Herhangi bir etiketi yoksa makineler bir veri kümesinden nasıl bir şeyler öğrenebilir? Bu sorunun cevabını denetimsiz öğrenmede bulacaksınız.

Denetimsiz öğrenme, insan denetimine ihtiyaç duymadan verilerdeki gizli kalıpları keşfetmek için makine öğrenimi algoritmalarını kullanır. Benzerlikleri ve karşıtlıkları bulma yetenekleri, onları veri analizi, gruplama, anormallik tespiti ve diğer benzer görevler için etkili bir araç haline getirir. Örneğin, hangi grubun daha fazla harcadığını analiz etmek için müşterileri aradıkları ürün türlerine ve çevrimiçi geçirdikleri süreye göre gruplamak. Ya da bankacılık işlemlerinden kredi kartı dolandırıcılığının tespit edilmesi, çünkü normal işlem modellerinden sıyrılıyor. Denetimsiz öğrenme tekniklerinin en yaygın kullanılanlarından biri olan kümeleme bir sanattır. Farklı veri noktalarını, özelliklerindeki benzerliklere göre gruplama sanatı. Diyelim ki yeni bir ülkede bir süpermarkettesiniz. Raflarda bazı egzotik meyveler görüyorsunuz. Adlarını bilmeseniz de bazılarının büyük ve sarı, bazılarının ise küçük ve mavi olduğunu görebilirsiniz. Bu, meyvenin boyut ve renk gibi özelliklerine göre yapılan kümelemedir.

Kümelemede, sınıflandırmadan farklı olarak, kümelerin etiketlerine sahip değiliz. Sadece özelliklere göre kümeliyoruz. İki meyve benzer şekil, boyut ve renge sahipse, bunlar büyük olasılıkla aynı salkımın parçalarıdır ve dolayısıyla aynı tür meyvelerdir, örneğin kavun veya yaban mersini. Şimdi soru şu, bilgisayarların kümeleme yapmasını nasıl sağlayabiliriz? Örnekleri, özelliklerine göre bir veri kümesinden bağımsız olarak gruplayabilirler mi? Neyse ki, evet. Makine öğreniminin bu iş için bazı algoritmaları vardır. Denetimsiz öğrenmenin en ünlü algoritması olan K-means ile başlayalım. K-means, veri noktalarının grubun merkezinden uzaklıklarına bağlı olarak “K” sayıda gruba ayrıldığı yaygın bir kümeleme yaklaşımıdır. Amaç, belirli bir merkeze yakın olan veri noktalarını bir arada gruplandırmaktır.

K'yi optimize etmemize yardımcı olacak farklı algoritmalar var. Ancak şimdilik rastgele bir sayı kullanacağız ve deneme yanılma yoluyla K'nin bize en iyi performansı verdiğini bulacağız. K-means algoritması, her küme için başlangıç ​​noktaları olarak kullanılan, merkezoidler olarak da adlandırılan, rastgele seçilmiş küme merkez noktalarından oluşan bir birinci grupla başlar. Daha sonra ağırlık merkezlerinin konumlarını optimize etmek için yinelemeli hesaplamalar gerçekleştirir.

Modelin anlamlı kümeler oluşturup oluşturmadığını nasıl bilebiliriz? Kümeler için yaygın olarak kullanılan performans değerlendirme ölçütlerinden biri Siluet Katsayısı'dır. Siluet Katsayısı veya siluet puanı, bir kümeleme tekniğinin iyiliğini hesaplamak için kullanılan bir ölçüdür. Bir noktanın aynı kümedeki diğer noktalara olan ortalama uzaklığını, aynı noktanın en yakın kümedeki noktalara olan ortalama uzaklığını karşılaştırır.

a: Bir örnek ile aynı kümedeki diğer tüm noktalar arasındaki ortalama mesafe.

b: Bir örnek ile bir sonraki en yakın kümedeki diğer tüm noktalar arasındaki ortalama mesafe.

Skor -1 ile +1 arasında değişir. Sıfır civarındaki puanlar örtüşen kümeleri gösterir. Kümeler yoğun ve iyi ayrılmış olduğunda, puan bire yakındır. Puan negatif olduğunda, kümelememizin anlamlı olmadığını biliyoruz. Şimdi uygulama zamanı! Kullanacağımız veri seti University of California Irvine'in makine öğrenimi deposundan alınmıştır. Bu, canlı satışla ilgilidir; bu, genellikle sosyal medyada canlı bir akış aracılığıyla öğelerin gösterilmesi ve satılması anlamına gelir. Her satır bir ürünü gösterir. Ürünler ve müşteriler arasındaki bağlantıları anlamak için, bir Facebook gönderisinin çeşitli tepkilerini, yorum sayısını ve paylaşım sayısını kullanacağız. Toplamda 13 özellik var. Veri setini yüklemekle başlayalım.

Veri kümelerini yükleme konusunda zaten uzmanlaştık! Pandas kütüphanesini kullanarak bu veri setini pd olarak yükleyeceğiz ve veri setimizin ilk beş satırını gözlemlemek için head fonksiyonunu kullanacağız. K-means modelini başlatarak devam edeceğiz. Tabi önce import etmemiz gerekiyor. Şimdilik rastgele küme sayısını 3 olarak ayarlayarak başlayalım. Bu videonun ilerleyen kısımlarında bu noktaya geri döneceğiz ve uygun sayıda küme seçeceğiz. Modeli içe aktarıp başlattıktan sonra model.fit yöntemini kullanarak eğitiyoruz! Artık tahminlerde bulunmaya hazırız. Kümeleme durumunda, tahminlerin örneğin ait olduğu grup sayısını gösterdiğine dikkat edin.

Küme sayısını 3 olarak belirlediğimizde üç etiket elde ettik. 0,1 ve 2. Her grupta kaç örneğimiz olduğunu kontrol edelim. Bunun için NumPy'yi içe aktarmamız ve benzersiz yöntemi kullanmamız gerekiyor. Şimdi küme sayısı seçimine geri dönelim. Nasıl daha iyi sayıda küme seçebiliriz? Siluet yöntemini deneyelim. Bu kodda, kontrol etmek için, modelin en iyi performansı gösterdiği K için bir dizi k-kümesi değeri alıyoruz. Tüm örnekler üzerinde ortalama siluet katsayısını hesaplamak için sklearn kitaplığından siluet_skor işlevini kullanıyoruz. Onları yazdırır ve sayıları kontrol ederiz. En iyi siluet skorunun ne olduğunu hatırlıyor musun? En iyi K sayısı, en yüksek puana sahip, bire en yakın olandır. Grafikte rahatlıkla görebiliriz.

Siluet katsayısının en yüksek değerini küme sayısı 4 olduğunda alıyoruz. 3 küme için de yüksek siluet katsayısı elde ettiğimizi görüyoruz yani ilk tercihimiz çok da kötü olmamış. Ancak biz elimizden gelenin en iyisini yapmayı hedefliyoruz. Bu nedenle, K-means modelini başlatırken n_clusters = 4'ü seçersek daha iyi olur. 4'e ayarlayarak tekrar deneyelim. Yani dört farklı grubumuz var. Peki neden verilerimizi dört farklı gruba ayırdık? Buradan hangi içgörüleri çıkarabiliriz? Neyle ilgilendiğimize bağlı olarak birkaç içgörü elde edebiliriz. Grupların her biri için bazı istatistikler gözlemlemek için, veri çerçevemize etiketleri ekleyelim ve gösterelim. İşte bunu nasıl yapacağımız. Sonuçtan, gözlemlere farklı etiketler atadığımızı görüyoruz. Ve bu etiketler bulduğumuz gruplar.

Bu kodda, kümelenmiş her grubun ortalama yorum sayısını bulduk. Ve her grup için ortalama yorum sayısının farklı olduğunu açıkça görüyoruz. Dolayısıyla bu sayıları kullanarak kullanıcılar arasında en ünlü grubu bulabiliriz. Yorum sayısına göre en popüler grup sıfır, ardından iki ve bir ve son olarak en az ünlü grup üç. Her grup için ortalama paylaşım sayısını da görebiliriz. Her grup için hisse sayısını da gözlemledik. Paylaşım sayısına göre en popüler grubun yine sıfır olduğunu görüyoruz. Diğer grupların paylaşım sayıları birbirinden çok farklı değil ve bunun nedeni beğeni sayısındaki en büyük farkın sıfır grubunda olması olabilir. Bakalım daha neler bulabiliriz. Kod parçacığı sizin için biraz karmaşık olabilir, ancak içgörüyü anlamak bu adım için yeterlidir. Bu kod sayesinde sıfır grubuna ait ürünlerin sadece fotoğraflı paylaşımlara sahip olduğunu söyleyebiliriz. Bu, müşterilerin ürünün fotoğraflarını görmeyi tercih ettiği anlamına gelir. Belki de bu yüzden sıfır grubu kullanıcılar arasında bu kadar popülerdir. Bunlar, kümelemenin bulmamıza yardımcı olabileceği içgörü türleridir.

Bu videoda denetimsiz öğrenmeyi ve en önemli denetimsiz öğrenme uygulamalarından biri olan Kümelemeyi ele aldık. K-means kümeleme algoritması kullanılarak bir kümeleme modelinin nasıl eğitilebileceğinden bahsettik. Daha sonra kümeleme için performans değerlendirme ölçütlerinden bahsettik. Son olarak, tüm bu kavramları sklearn kütüphanesini kullanarak uyguladık. Bir sonraki videoda, makine öğrenimi modellerini eğitirken hangi sorunların ortaya çıkabileceğini ve bunları nasıl aşabileceğimizi tartışacağız. Bir sonraki videoda görüşmek üzere!