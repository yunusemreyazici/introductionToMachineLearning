Herkese merhaba! Bu bölümde makinelerin nasıl öğrendiğinden bahsedeceğiz. Bir makine öğrenimi işlem hattı tanımlayarak başlayacağız. Bu süreçte girdi ve çıktı gibi temel terimleri ele alacağız. Girdi verilerinizi neden bir eğitim ve test veri kümesine ayırmanız gerektiğinden bahsedeceğiz. Ardından, modelinizi nasıl eğitip test edebileceğinizi ve modelinizin performansını değerlendirmenin neden önemli olduğunu size göstereceğiz.

Tipik bir makine öğrenimi ardışık düzeni, sistemimize beslediğimiz ham verilerle başlar. Sistem verileri alır ve bilgisayarın anlayabileceği bir forma dönüştürür. Ardından, bir çıktıyı hesaplamak için bir dizi matematiksel adım gerçekleştirir. Bu matematiksel adımlar dizisine makine öğrenimi algoritması denir. Çıktıyı hesaplamak için kullandığımız sisteme makine öğrenimi modeli denir. Makine öğrenimi modeli, girdi verilerini alır ve bir çıktıyı hesaplamak için farklı parametreler kullanır. Model, hesaplanan çıktıyı beklenen çıktıyla karşılaştırır. Öngörülen ve beklenen çıktı arasındaki farkı “kayıp” olarak adlandırırız. Ve bu kaybı en aza indirmek için makine, öğrenilen parametreleri bir dizi yinelemede ayarlar. Tüm bu sürece “eğitim” denir.

Bilgisayarlar inanılmaz derecede hızlıdır ve verilerden örnekleri kolayca ezberleyebilir. Amacımız, sadece ezberlediği şeyler üzerinde değil, aynı zamanda öğrenilen parametreler ve girdi ile karşılık gelen çıktı arasındaki ilişkiler üzerinde de görünmeyen veriler üzerinde çalışabilen bir model yetiştirmektir. Bu nedenle eğitimden önce veri setini eğitim ve test setlerine ayırdık. Eğitim veri seti, eğitim için kullanılır ve test veri seti, modelin performansını değerlendirmek için kullanılır. Eğitim verilerinin çözmeye çalıştığımız sorunla alakalı olması gerekir. Ayrıca çok çeşitli veri örneklerini kapsamalıdır. İyi bir eğitim veri seti, iyi bir model eğitmenize yardımcı olacaktır.

Eğitimden sonra, model tahminler yapmaya hazırdır. Modelin görünmeyen örnekler üzerindeki performansını kontrol etmek ve genelleştirme yeteneğini değerlendirmek için test veri setini kullanıyoruz. Ancak "eğitimli" makine öğrenimi modelimizin ne kadar iyi veya kötü olduğunu nasıl değerlendireceğiz? İki terimi daha tanıtmanın zamanı geldi: "performans" ve "değerlendirme". Bir ML modelinin performansı, beklenen çıktıyı ne kadar doğru tahmin ettiğini gösterir. Ne kadar iyi yaptığını söylemek için performansını değerlendirmemiz gerekiyor. Bu amaçla değerlendirme ölçütleri vardır. Değerlendirme metrikleri, tahmin edilen ve gerçek değerler kullanılarak hesaplanır. Bu ölçümler, makine öğrenimi modelimizin girdimizdeki farklı özellikler arasındaki ilişkileri öğrenip öğrenmediğini gösterir. Elbette modelimizin iyi performans gösteremeyeceği ve iyi tahminler yapamayacağı durumlar olacaktır. Değerlendirme ölçütleri bize iyi bir modeli kötü bir modelden nasıl ayırt edeceğimizi gösterir. Ayrıca, farklı makine öğrenimi sorunları için doğruluk ve kesinlik gibi belirli ölçütler vardır. Ama şimdi onlar için endişelenmeyin, sonraki videolarda onları keşfedeceğiz.

Makine öğrenimi boru hattının bir örneğini inceleyelim. Elimizde yüz kedi ve yüz köpek görüntü verisi olduğunu varsayalım. Bu verilerde boy, renk ve pati ölçüsü gibi özellikler bulunmaktadır. Veri setini bir tren seti ve bir test seti olarak ayırdık. Test veri setinde 20 kedi ve 20 köpek alıyoruz ve kalan 160 örnek eğitim setinin bir parçası. Bu eğitim seti çeşitli ve alakalı olmalıdır. Bu, çok çeşitli kedi ve köpek örneklerini içermesi ve yalnızca bu iki hayvanla ilgili verileri içermesi gerektiği anlamına gelir. Burada bir makine öğrenimi modeli oluşturuyoruz ve onu bir eğitim veri kümesi kullanarak eğitiyoruz. Eğitimden sonra, modelimizin görünmeyen kedi ve köpek örneklerini tespit edip edemediğini kontrol etmek için test veri setini kullanırız. Son olarak, kedi ve köpekleri ayırt etmede modelimizin doğruluğunu hesaplıyor ve performansını değerlendiriyoruz.

Bu derste, makine öğrenimi işlem hattını ve eğitim ve test için neden farklı veri kümeleri kullandığımızı öğrendik. Performans ve değerlendirmeyi ve neden önemli olduklarını da öğrendik. Artık temelleri ele aldığımıza göre, ilk makine öğrenimi algoritmamızı tanıtmaya başlayabiliriz.